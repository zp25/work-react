$colorMap: (
  black: #222,
  black-hole: #010101,
  grey-bg: #f5f5f5,
);

@function color($key: normal) {
  @if map-has-key($colorMap, $key) {
    @return map-get($colorMap, $key);
  }

  @return #{$key};
}

@function torem($px) {
  $rem: 100px;
  @return ($px / $rem) + rem;
}

// font-size(px): 12, 14, 16, 20, 34
$sizeMap: (
  light: torem(12px),
  normal: torem(14px),
  bold: torem(16px),
  bolder: torem(20px),
);

@function fontSize($key: normal) {
  @if map-has-key($sizeMap, $key) {
    @return map-get($sizeMap, $key);
  }

  @return torem($key);
  // @warn 'Unknown `#{$key}` in $sizeMap.';
  // @return null;
}

.page-wrap {
  width: 100%;
  max-width: 1000px;
}

.iconbg {
  background-color: color(grey-bg);
  background-position: 50% 50%;
  background-size: cover;
  background-repeat: no-repeat;
}

.ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// http://www.cssmojo.com/latest_new_clearfix_so_far/
.cf::after {
  content: '';
  display: table;
  clear: both;
}

/**
 * mixins
 */
@mixin flexbox($direction:row, $wrap:nowrap, $justify-content:flex-start, $align-items:stretch) {
  display: flex;
  flex-flow: $direction $wrap;
  justify-content: $justify-content;
  align-items: $align-items;
}

@mixin imageSet($x2, $x3) {
  background-image: url($x2);
  background-image: -webkit-image-set(url($x2) 2x, url($x3) 3x);
  background-image: image-set(url($x2) 2x, url($x3) 3x);
}
